{"version":3,"sources":["model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4BAA0B;AAC1B,yDAAuC;AACvC,iEAAgG;AAEhG,iCAAoC;AAOpC,SAAgB,MAAM,CAAI,OAA0B;IAChD,IAAI,OAAO,CAAC,KAAK,EAAE;QACf,OAAO,UAAC,MAAW;YACf,IAAI,CAAC,MAAM,CAAC,EAAE;gBAAE,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAExG,IAAI,OAAO,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,OAAO,CAAC,IAAI;oBAAE,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC;gBAC5C,OAAO,+BAAO,CAAC,aAAK,OAAO,CAA0B,CAAC,CAAC,MAAM,CAAC,CAAA;aACjE;YACA,MAAc,CAAC,IAAI,GAAG,EAAE,CAAC;YAC1B,IAAM,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,yBAAiB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;YACtE,YAAG,CAAC,IAAI,EAAE,UAAA,GAAG;gBACT,IAAI,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;oBAAE,OAAO,GAAG,CAAC;gBACtC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,UAAqB,KAAU,EAAE,IAAS;oBAC/D,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBAC3B,OAAO,KAAK,CAAC;gBACjB,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,UAAqB,KAAU,EAAE,IAAS;gBAChE,YAAG,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAZ,CAAY,CAAC,CAAC;gBAClC,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC1B,YAAG,CAAC,cAAK,CAAC,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,UAAC,CAAC,EAAE,CAAC;gBACjE,MAAc,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,EAAb,CAAa,EAAE,CAAC,CAAC;YAErE,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,+BAAO,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACnF,CAAC,CAAC;KACL;SAAM;QACH,IAAI,CAAE,OAAe,CAAC,EAAE,EAAE;YACrB,OAAe,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACrG;QAEA,OAAe,CAAC,IAAI,GAAG,EAAE,CAAC;QAC3B,YAAG,CAAC,cAAK,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,UAAC,CAAC,EAAE,CAAC;YACpE,OAAe,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,+BAAO,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;KAC1C;AACL,CAAC;AAzCD,wBAyCC;AAEY,QAAA,iBAAiB,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAI9D,SAAgB,MAAM;IAAC,eAAe;SAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;QAAf,0BAAe;;IAClC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,OAAO,UAAU,MAAW,EAAE,GAAoB,EAAE,UAAwC;YAChF,IAAA,MAAM,GAAK,KAAK,CAAC,CAAC,CAAC,OAAb,CAAc;YAC5B,IAAI,MAAM,EAAE;gBACR,IAAM,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,yBAAiB,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;gBAClE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClB,OAAO,CAAC,cAAc,CAAC,yBAAiB,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;aAC3D;YACD,+BAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;QACzC,CAAC,CAAA;KACJ;IACD,OAAO,+BAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC;AAbD,wBAaC;AAED;IAA4D,8BAAQ;IAApE;;IAOA,CAAC;IAJG,qCAAqC;IACvB,iBAAM,GAApB,UAAqB,QAA+C;QAChE,OAAU,IAAI,CAAC,EAAE,SAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAG,CAAC;IAC/C,CAAC;IACL,iBAAC;AAAD,CAPA,AAOC,CAP2D,mCAAQ,GAOnE;AAPY,gCAAU","file":"../model.js","sourcesContent":["import 'reflect-metadata';\nexport * from 'vuex-module-decorators';\nimport { VuexModule as VxModule, Module as VModule, Action as A } from 'vuex-module-decorators';\nimport { Module as Mod, Store } from 'vuex';\nimport { map, merge } from 'lodash';\nimport { DynamicModuleOptions } from 'vuex-module-decorators/dist/types/moduleoptions';\nimport { ActionDecoratorParams } from 'vuex-module-decorators/dist/types/action';\n\n// tslint:disable-next-line:ban-types\nexport function Module<S>(options: { store: Store<any> }): ClassDecorator;\nexport function Module<S>(options: { [x: string]: any, dynamic: boolean, store: Store<any> }): ClassDecorator;\nexport function Module<S>(options: any & Mod<S, any>): any {\n    if (options.store) {\n        return (module: any) => {\n            if (!module.id) module.id = Number(Math.random().toString().substring(3, 10) + Date.now()).toString(36);\n\n            if (options.dynamic) {\n                if (!options.name) options.name = module.id;\n                return VModule({ ...options } as DynamicModuleOptions)(module)\n            }\n            (module as any).keys = {};\n            const muts = Reflect.getMetadata(ActionMutationKey, module.prototype);\n            map(muts, mut => {\n                if (module.mutations[mut]) return mut;\n                module.mutations[mut] = (function (this: any, state: any, data: any) {\n                    state[mut.slice(1)] = data;\n                    return state;\n                }).bind(module.prototype);\n            });\n            module.mutations._save = (function (this: any, state: any, data: any) {\n                map(data, (o, k) => state[k] = o);\n                return state;\n            }).bind(module.prototype);\n            map(merge({}, module.actions, module.mutations, module.getters), (o, i) => {\n                (module as any).keys[i] = i;\n            });\n\n            Object.defineProperty(module, 'store', { get: () => options.store });\n\n            options.store.registerModule(module.id, VModule({ namespaced: true })(module));\n        };\n    } else {\n        if (!(options as any).id) {\n            (options as any).id = Number(Math.random().toString().substring(3, 10) + Date.now()).toString(36);\n        }\n\n        (options as any).keys = {};\n        map(merge({}, options.actions, options.mutations, options.getters), (o, i) => {\n            (options as any).keys[i] = i;\n        });\n        VModule({ namespaced: true })(options);\n    }\n}\n\nexport const ActionMutationKey = Symbol('#ActionMutationKey');\n\nexport function Action<T, R>(target: T, key: string | symbol, descriptor: TypedPropertyDescriptor<(...args: any[]) => R>): void;\nexport function Action<T>(params: ActionDecoratorParams): MethodDecorator;\nexport function Action(...props: any[]) {\n    if (props.length === 1) {\n        return function (target: any, key: string | symbol, descriptor: TypedPropertyDescriptor<any>) {\n            const { commit } = props[0];\n            if (commit) {\n                const muts = Reflect.getMetadata(ActionMutationKey, target) || [];\n                muts.push(commit);\n                Reflect.defineMetadata(ActionMutationKey, muts, target);\n            }\n            A(props[0])(target, key, descriptor);\n        }\n    }\n    return A({})(props[0], props[1], props[2]);\n}\n\nexport class VuexModule<S = ThisType<any>, R = any> extends VxModule {\n    public static id: string;\n    public static keys: { [x: string]: string };\n    // tslint:disable-next-line:ban-types\n    public static action(callback: (model: any & VuexModule) => Function) {\n        return `${this.id}/${callback(this.keys)}`;\n    }\n}\n"]}